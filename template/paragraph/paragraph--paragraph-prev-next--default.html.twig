{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
] %}

{% set background_color_top = '#' ~ content.field_prgf_color_top['#items'].entity.field_color.value %}
{% set bg_color_top = 'background-color: '  ~  background_color_top %}
{% set background_color_bottom = '#' ~ content.field_prgf_color_bottom['#items'].entity.field_color.value %}
{% set bg_color_bottom = 'background-color: '  ~  background_color_bottom %}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    <div {{ attributes.setAttribute('style', bg_color_top) }}>
      <div class="container-fluid">
        {% block content %}
        <div class="row">
          <div class="col-lg-6 col-12 col-sm-6">
            <a  href="{{ content.field_prgf_link_prev.0['#url'] }}" class="d-flex block-prev prev-next pr-3">
              <div class="d-flex align-items-center">
                <i class="fas fa-arrow-circle-left"></i>
              </div>
              <div class="w-100 d-block prev-next-body">
                <h4>{{ content.field_prgf_title_prev }}</h4>
                <div class="text-description">
                  {{ content.field_prgf_link_prev.0['#title'] }}
                </div>
              </div>
            </a>
          </div>
        </div>
      </div>
    </div>

    <div {{ attributes.setAttribute('style', bg_color_bottom) }}>
      <div class="container-fluid">
        <div class="row">
          <div class="col-lg-6 col-sm-6 col-12 offset-sm-6">
            <a  href="{{ content.field_prgf_link_next.0['#url'] }}" class="d-flex block-next text-right prev-next pl-3">
              <div class="w-100 d-block prev-next-body">
                <h4>{{ content.field_prgf_title_next }}</h4>
                <div class="text-description">
                  {{ content.field_prgf_link_next.0['#title'] }}
                </div>
              </div>
              <div class="d-flex align-items-center">
                <i class="fas fa-arrow-circle-right"></i>
              </div>
            </a>
          </div>
        </div>
      </div>
      {% endblock %}
    </div>
  </div>
{% endblock paragraph %}
